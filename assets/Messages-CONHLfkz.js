import{A as h,u as i,B as m,C as g,D as k,_ as f,a as c,b as n,t as d,F as R,x as I,e as p,v as S,I as b,o as l,j as v}from"./index-CgZNDQrm.js";const M=h("chat",{state:()=>({socket:null,currentRoomId:null,messages:[],isConnected:!1}),getters:{token(){return i().token},user(){return i().user}},actions:{connectSocket(){this.token?(console.log("🔗 Conectando al socket con el token de usuario..."),g(this.token),this.socket=k(),this.socket.on("connect",()=>{this.isConnected=!0,console.log("✅ Conectado al socket."),this.joinRoom("sala1")}),this.socket.on("disconnect",e=>{this.isConnected=!1,console.log(`❌ Socket desconectado. Razón: ${e}`)}),this.subscribeToEvents()):console.warn("⚠️ No hay token disponible, no se puede conectar al socket.")},watchAuthToken(){i().$subscribe((s,r)=>{r.token&&(console.log("🔄 Token cambiado, actualizando socket..."),m(r.token))})},subscribeToEvents(){this.socket&&(this.socket.off("chat:newMessage").on("chat:newMessage",this.onNewMessage),this.socket.off("chat:roomJoined").on("chat:roomJoined",this.onRoomJoined),this.socket.off("chat:roomLeft").on("chat:roomLeft",this.onRoomLeft))},onNewMessage(e){console.log("📩 Nuevo mensaje recibido:",e),e.roomId===this.currentRoomId&&this.messages.push(e)},onRoomJoined(e){console.log(`✅ Usuario unido a la sala ${e.roomId}`),e.roomId===this.currentRoomId&&this.loadMessageHistory()},onRoomLeft(e){console.log(`🚪 Usuario salió de la sala ${e.roomId}`),e.roomId===this.currentRoomId&&(this.messages=[])},loadMessageHistory(){this.socket&&this.currentRoomId&&(this.socket.emit("chat:historyRequest",this.currentRoomId),this.socket.on("chat:historyResponse",e=>{e.roomId===this.currentRoomId&&(this.messages=e.messages)}))},joinRoom(e){if(!e){console.error("Error: roomId no proporcionado");return}this.socket&&this.currentRoomId!==e&&(this.socket.emit("chat:leaveRoom",this.currentRoomId),this.socket.emit("chat:joinRoom",e),this.currentRoomId=e,this.messages=[],this.loadMessageHistory())},sendMessage(e){var s;if(e.trim()&&this.currentRoomId){const r={user:((s=this.user)==null?void 0:s.name)||"Usuario",text:e,roomId:this.currentRoomId};this.socket&&this.socket.connected?this.socket.emit("chat:sendMessage",r):console.warn("⚠️ No se pudo enviar el mensaje.")}else console.warn("⚠️ Escribe un mensaje válido y asegúrate de estar en una sala.")}}}),j={data(){return{message:"",inputFocus:!1}},computed:{chatStore(){return M()},currentRoomId(){return this.chatStore.currentRoomId},messages(){return this.chatStore.messages}},created(){this.chatStore.connectSocket(),this.joinRoom("sala1")},updated(){const e=this.$refs.chatBox;e&&(e.scrollTop=e.scrollHeight)},methods:{joinRoom(e){if(!e){console.error("Error: roomId no proporcionado");return}this.chatStore.joinRoom(e)},sendMessage(){if(!this.message.trim()){console.warn("⚠️ El mensaje está vacío.");return}this.chatStore.sendMessage(this.message),this.message="",this.$nextTick(()=>{this.$refs.messageInput.focus()})}},beforeDestroy(){var e;(e=this.chatStore.socket)==null||e.off()}},x={class:"chat-container"},w={class:"room-actions"},y=["disabled"],C={class:"chat-box",ref:"chatBox"},E={class:"input-container"},T=["disabled"];function _(e,s,r,B,a,t){return l(),c("div",x,[n("h2",null,"💬 Chat en Sala: "+d(t.currentRoomId||"Ninguna"),1),n("div",w,[n("button",{onClick:s[0]||(s[0]=o=>t.joinRoom("sala1")),disabled:t.currentRoomId==="sala1"},"Sala 1",8,y)]),n("div",C,[(l(!0),c(R,null,I(t.messages,(o,u)=>(l(),c("div",{key:u,class:"message"},[n("strong",null,d(o.user)+":",1),s[6]||(s[6]=v()),n("span",null,d(o.text),1)]))),128))],512),n("div",E,[p(n("input",{ref:"messageInput","onUpdate:modelValue":s[1]||(s[1]=o=>a.message=o),placeholder:"Escribe un mensaje...",onKeydown:s[2]||(s[2]=b((...o)=>t.sendMessage&&t.sendMessage(...o),["enter"])),onFocus:s[3]||(s[3]=o=>a.inputFocus=!0),onBlur:s[4]||(s[4]=o=>a.inputFocus=!1)},null,544),[[S,a.message]]),n("button",{onClick:s[5]||(s[5]=(...o)=>t.sendMessage&&t.sendMessage(...o)),disabled:!a.message.trim()||!t.currentRoomId},"Enviar",8,T)])])}const F=f(j,[["render",_],["__scopeId","data-v-5141d9da"]]);export{F as default};
